#!/usr/bin/env bash
# ================================================================
# -*- mode: bash -*-
# vi: set ft=sh
# ****************************************************************
#
# DESCRIPTION
#    Manage RDS
#
# SYNTAX & EXAMPLES
#    See 'SYNTAX' (below)
#
# ----------------------------------------------------------------
# IMPLEMENTATION
#    version         script 0.1.1
#    author          Greg Milligan
#    copyright       Copyright (c) 2018 http://xybersolve.io
#    license         GNU General Public License
#
# ================================================================
#  DEBUG OPTION
#    set -n  # Uncomment to check your syntax, without execution.
#    set -x  # Uncomment to debug this shell script
#
# ---------------------------------------------------------------
#
# TODO:
# ****************************************************************


# ---------------------------------------
# CONFIGFURATION
# ---------------------------------------
# strict environment
set -o errexit  # exit on command error status
set -o nounset  # no unreadonlyd variables
set -o pipefail # failr on pipe failures
trap 'echo "Aborting due to errexit on line $LINENO. Exit code: ${?}" >&2' ERR

# ---------------------------------------
# GLOBAL VARIABLES
# ---------------------------------------
# booleans
declare -ir TRUE=1
declare -ir FALSE=0
# script info

declare -r PROGNAME="$(basename ${0})"
declare -r VERSION=0.0.1
declare -ri MIN_ARG_COUNT=1
declare -r SYNTAX=$(cat <<EOF
    Script: ${PROGNAME}
    Purpose: Manage RDS
    Usage: ${PROGNAME} [options]

    Options:
      --help:  help and usage
      --version: show version info
EOF
)
# files & directories
declare -r SCRIPT_DIR="$( dirname ${0} )"
declare -r COMMON_FILE="${SCRIPT_DIR}/aws-common.sh"

# actions
declare -i GET_IPS=${FALSE}

# script globals
declare -A IPS=()

# ---------------------------------------
# MAIN ROUTINES
# ---------------------------------------
# do not have 'die()' routine yet - in common file
source "${COMMON_FILE}" || \
  { echo "Could not load common file: ${COMMON_FILE}"; exit 1; }

__restore() {
  # The - part of the aws s3 cp command pipes the output to STDOUT which is read by mysql.
  mysql -u db_user -ppassword database_name < aws s3 cp s3://mysqldump_bucket_name/mysqldump.sql -

  # another
  mysqldump -u root -p --databases 'mydatabase' > dump.sql
  mysql -h myrds.com -u myuser -p < dump.sql
}


__get_opts() {
  while (( $# > 0 )); do
    local arg="${1}"; shift;
    case ${arg} in
      --help)    show_help                ;;
      --version) show_version             ;;
      *) die "Unknown option: ${arg}" ;;
   esac
  done
  return 0
}

__dispatch() {
  (( GET_IPS )) && __get_ips
  return 0
}

main() {
  (( ${#} < MIN_ARG_COUNT )) && die "Expects at least ${MIN_ARG_COUNT} arguments" 1
  (( $# > 0 )) && __get_opts "$@"

  __dispatch

  return 0
}
(( ${#} > 0 )) && main "${@}" || main
